name: Nextjs CI/CD Deploy

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: mydb
          MYSQL_USER: test
          MYSQL_PASSWORD: test
        ports:
          - 3306:3306
        options: >-
          --health-cmd "mysqladmin ping --silent"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    env:
      DATABASE_URL: mysql://test:test@127.0.0.1:3306/mydb
      # Add more .env secrets if required during build

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ vars.NODE_VERSION || '20'}}

      - name: Check required secrets and vars
        run: |
          # Check build-time vars
          # if [ -z "${{ secrets.API_KEY }}" ]; then echo "❌ Missing secret: API_KEY"; exit 1; fi
          if [ -z "${{ vars.SERVER_DEPLOY_PATH }}" ]; then echo "❌ Missing secret: SERVER_DEPLOY_PATH"; exit 1; fi
      
          # Check deploy-time secrets
          if [ -z "${{ secrets.SERVER_HOST }}" ]; then echo "❌ Missing secret: SERVER_HOST"; exit 1; fi
          if [ -z "${{ secrets.SERVER_USER }}" ]; then echo "❌ Missing secret: SERVER_USER"; exit 1; fi
          if [ -z "${{ secrets.SERVER_SSH_KEY }}" ]; then echo "❌ Missing secret: SERVER_SSH_KEY"; exit 1; fi

          # Check required files
          if [ ! -f "ecosystem.config.js" ]; then echo "❌ Missing file: ecosystem.config.js"; exit 1; fi
          
      
        shell: bash

      - name: Install dependencies
        run: npm ci

      - name: Check if Prisma exists
        id: prisma-check
        run: |
          if [ -f "prisma/schema.prisma" ]; then
            echo "prisma=true" >> $GITHUB_OUTPUT
          else
            echo "prisma=false" >> $GITHUB_OUTPUT
          fi

      - name: Generate Prisma Client (if needed)
        if: steps.prisma-check.outputs.prisma == 'true'
        run: npx prisma generate

      - name: Run Prisma Migrate (if needed)
        if: steps.prisma-check.outputs.prisma == 'true'
        run: npx prisma migrate deploy

      - name: Build Next.js
        run: npm run build
        #env:
          # Add ENVs if required

      - name: Deploy to Server (via SCP)
        uses: appleboy/scp-action@v0.1.3
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          port: 22
          source: ".next,package.json,public,ecosystem.config.js"
          target: ${{ vars.SERVER_DEPLOY_PATH }}

      - name: Run SSH Remote Commands (optional)
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          port: 22
          script: |
            cd ${{ vars.SERVER_DEPLOY_PATH }}
            npm install --omit=dev
            pm2 reload ecosystem.config.js || pm2 start ecosystem.config.js
